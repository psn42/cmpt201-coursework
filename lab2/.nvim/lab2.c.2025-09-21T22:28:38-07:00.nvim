#define _POSIX_C_SOURCE 200809L
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
  char *buff = NULL;
  size_t size = 0;

  while (1) {
    printf("Enter programs to run: ");
    ssize_t num_char = getline(&buff, &size, stdin);

    if (num_char == -1) {
      perror("getline failed");
      exit(EXIT_FAILURE);
    }

    if (num_char > 0 && buff[num_char - 1] == '\n') {
      buff[num_char - 1] = '\0';
    }

    char *saveptr;
    const char *delimiter = "\"";
    char *token = strtok_r(buff, delimiter, &saveptr);

    while (token != NULL) {
      pid_t pid = fork();
      if (pid < 0) {
        perror("fork failed");
        exit(EXIT_FAILURE);
      } else if (pid == 0) {
        execl(buff, buff, (char *)NULL);
        perror("Exec failure");
        exit(EXIT_FAILURE);
      } else {
        int status;
        waitpid(pid, &status, 0);
      }

      token = strtok_r(NULL, delimiter, &saveptr);
  }

  free(buff);
  return 0;
  }
}
